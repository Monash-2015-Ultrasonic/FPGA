--lpm_decode CBX_DECLARE_ALL_CONNECTED_PORTS="OFF" DEVICE_FAMILY="Cyclone II" LPM_DECODES=32 LPM_WIDTH=5 data enable eq
--VERSION_BEGIN 13.0 cbx_cycloneii 2013:06:12:18:03:43:SJ cbx_lpm_add_sub 2013:06:12:18:03:43:SJ cbx_lpm_compare 2013:06:12:18:03:43:SJ cbx_lpm_decode 2013:06:12:18:03:43:SJ cbx_mgl 2013:06:12:18:05:10:SJ cbx_stratix 2013:06:12:18:03:43:SJ cbx_stratixii 2013:06:12:18:03:43:SJ  VERSION_END


-- Copyright (C) 1991-2013 Altera Corporation
--  Your use of Altera Corporation's design tools, logic functions 
--  and other software and tools, and its AMPP partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Altera Program License 
--  Subscription Agreement, Altera MegaCore Function License 
--  Agreement, or other applicable license agreement, including, 
--  without limitation, that your use is for the sole purpose of 
--  programming logic devices manufactured by Altera and sold by 
--  Altera or its authorized distributors.  Please refer to the 
--  applicable agreement for further details.



--synthesis_resources = lut 36 
SUBDESIGN decode_opa
( 
	data[4..0]	:	input;
	enable	:	input;
	eq[31..0]	:	output;
) 
VARIABLE 
	data_wire[4..0]	: WIRE;
	enable_wire	: WIRE;
	eq_node[31..0]	: WIRE;
	eq_wire[31..0]	: WIRE;
	w_anode1007w[3..0]	: WIRE;
	w_anode1017w[3..0]	: WIRE;
	w_anode653w[2..0]	: WIRE;
	w_anode666w[3..0]	: WIRE;
	w_anode683w[3..0]	: WIRE;
	w_anode693w[3..0]	: WIRE;
	w_anode703w[3..0]	: WIRE;
	w_anode713w[3..0]	: WIRE;
	w_anode723w[3..0]	: WIRE;
	w_anode733w[3..0]	: WIRE;
	w_anode743w[3..0]	: WIRE;
	w_anode755w[2..0]	: WIRE;
	w_anode764w[3..0]	: WIRE;
	w_anode775w[3..0]	: WIRE;
	w_anode785w[3..0]	: WIRE;
	w_anode795w[3..0]	: WIRE;
	w_anode805w[3..0]	: WIRE;
	w_anode815w[3..0]	: WIRE;
	w_anode825w[3..0]	: WIRE;
	w_anode835w[3..0]	: WIRE;
	w_anode846w[2..0]	: WIRE;
	w_anode855w[3..0]	: WIRE;
	w_anode866w[3..0]	: WIRE;
	w_anode876w[3..0]	: WIRE;
	w_anode886w[3..0]	: WIRE;
	w_anode896w[3..0]	: WIRE;
	w_anode906w[3..0]	: WIRE;
	w_anode916w[3..0]	: WIRE;
	w_anode926w[3..0]	: WIRE;
	w_anode937w[2..0]	: WIRE;
	w_anode946w[3..0]	: WIRE;
	w_anode957w[3..0]	: WIRE;
	w_anode967w[3..0]	: WIRE;
	w_anode977w[3..0]	: WIRE;
	w_anode987w[3..0]	: WIRE;
	w_anode997w[3..0]	: WIRE;
	w_data651w[2..0]	: WIRE;

BEGIN 
	data_wire[] = data[];
	enable_wire = enable;
	eq[] = eq_node[];
	eq_node[31..0] = eq_wire[31..0];
	eq_wire[] = ( ( w_anode1017w[3..3], w_anode1007w[3..3], w_anode997w[3..3], w_anode987w[3..3], w_anode977w[3..3], w_anode967w[3..3], w_anode957w[3..3], w_anode946w[3..3]), ( w_anode926w[3..3], w_anode916w[3..3], w_anode906w[3..3], w_anode896w[3..3], w_anode886w[3..3], w_anode876w[3..3], w_anode866w[3..3], w_anode855w[3..3]), ( w_anode835w[3..3], w_anode825w[3..3], w_anode815w[3..3], w_anode805w[3..3], w_anode795w[3..3], w_anode785w[3..3], w_anode775w[3..3], w_anode764w[3..3]), ( w_anode743w[3..3], w_anode733w[3..3], w_anode723w[3..3], w_anode713w[3..3], w_anode703w[3..3], w_anode693w[3..3], w_anode683w[3..3], w_anode666w[3..3]));
	w_anode1007w[] = ( (w_anode1007w[2..2] & w_data651w[2..2]), (w_anode1007w[1..1] & w_data651w[1..1]), (w_anode1007w[0..0] & (! w_data651w[0..0])), w_anode937w[2..2]);
	w_anode1017w[] = ( (w_anode1017w[2..2] & w_data651w[2..2]), (w_anode1017w[1..1] & w_data651w[1..1]), (w_anode1017w[0..0] & w_data651w[0..0]), w_anode937w[2..2]);
	w_anode653w[] = ( (w_anode653w[1..1] & (! data_wire[4..4])), (w_anode653w[0..0] & (! data_wire[3..3])), enable_wire);
	w_anode666w[] = ( (w_anode666w[2..2] & (! w_data651w[2..2])), (w_anode666w[1..1] & (! w_data651w[1..1])), (w_anode666w[0..0] & (! w_data651w[0..0])), w_anode653w[2..2]);
	w_anode683w[] = ( (w_anode683w[2..2] & (! w_data651w[2..2])), (w_anode683w[1..1] & (! w_data651w[1..1])), (w_anode683w[0..0] & w_data651w[0..0]), w_anode653w[2..2]);
	w_anode693w[] = ( (w_anode693w[2..2] & (! w_data651w[2..2])), (w_anode693w[1..1] & w_data651w[1..1]), (w_anode693w[0..0] & (! w_data651w[0..0])), w_anode653w[2..2]);
	w_anode703w[] = ( (w_anode703w[2..2] & (! w_data651w[2..2])), (w_anode703w[1..1] & w_data651w[1..1]), (w_anode703w[0..0] & w_data651w[0..0]), w_anode653w[2..2]);
	w_anode713w[] = ( (w_anode713w[2..2] & w_data651w[2..2]), (w_anode713w[1..1] & (! w_data651w[1..1])), (w_anode713w[0..0] & (! w_data651w[0..0])), w_anode653w[2..2]);
	w_anode723w[] = ( (w_anode723w[2..2] & w_data651w[2..2]), (w_anode723w[1..1] & (! w_data651w[1..1])), (w_anode723w[0..0] & w_data651w[0..0]), w_anode653w[2..2]);
	w_anode733w[] = ( (w_anode733w[2..2] & w_data651w[2..2]), (w_anode733w[1..1] & w_data651w[1..1]), (w_anode733w[0..0] & (! w_data651w[0..0])), w_anode653w[2..2]);
	w_anode743w[] = ( (w_anode743w[2..2] & w_data651w[2..2]), (w_anode743w[1..1] & w_data651w[1..1]), (w_anode743w[0..0] & w_data651w[0..0]), w_anode653w[2..2]);
	w_anode755w[] = ( (w_anode755w[1..1] & (! data_wire[4..4])), (w_anode755w[0..0] & data_wire[3..3]), enable_wire);
	w_anode764w[] = ( (w_anode764w[2..2] & (! w_data651w[2..2])), (w_anode764w[1..1] & (! w_data651w[1..1])), (w_anode764w[0..0] & (! w_data651w[0..0])), w_anode755w[2..2]);
	w_anode775w[] = ( (w_anode775w[2..2] & (! w_data651w[2..2])), (w_anode775w[1..1] & (! w_data651w[1..1])), (w_anode775w[0..0] & w_data651w[0..0]), w_anode755w[2..2]);
	w_anode785w[] = ( (w_anode785w[2..2] & (! w_data651w[2..2])), (w_anode785w[1..1] & w_data651w[1..1]), (w_anode785w[0..0] & (! w_data651w[0..0])), w_anode755w[2..2]);
	w_anode795w[] = ( (w_anode795w[2..2] & (! w_data651w[2..2])), (w_anode795w[1..1] & w_data651w[1..1]), (w_anode795w[0..0] & w_data651w[0..0]), w_anode755w[2..2]);
	w_anode805w[] = ( (w_anode805w[2..2] & w_data651w[2..2]), (w_anode805w[1..1] & (! w_data651w[1..1])), (w_anode805w[0..0] & (! w_data651w[0..0])), w_anode755w[2..2]);
	w_anode815w[] = ( (w_anode815w[2..2] & w_data651w[2..2]), (w_anode815w[1..1] & (! w_data651w[1..1])), (w_anode815w[0..0] & w_data651w[0..0]), w_anode755w[2..2]);
	w_anode825w[] = ( (w_anode825w[2..2] & w_data651w[2..2]), (w_anode825w[1..1] & w_data651w[1..1]), (w_anode825w[0..0] & (! w_data651w[0..0])), w_anode755w[2..2]);
	w_anode835w[] = ( (w_anode835w[2..2] & w_data651w[2..2]), (w_anode835w[1..1] & w_data651w[1..1]), (w_anode835w[0..0] & w_data651w[0..0]), w_anode755w[2..2]);
	w_anode846w[] = ( (w_anode846w[1..1] & data_wire[4..4]), (w_anode846w[0..0] & (! data_wire[3..3])), enable_wire);
	w_anode855w[] = ( (w_anode855w[2..2] & (! w_data651w[2..2])), (w_anode855w[1..1] & (! w_data651w[1..1])), (w_anode855w[0..0] & (! w_data651w[0..0])), w_anode846w[2..2]);
	w_anode866w[] = ( (w_anode866w[2..2] & (! w_data651w[2..2])), (w_anode866w[1..1] & (! w_data651w[1..1])), (w_anode866w[0..0] & w_data651w[0..0]), w_anode846w[2..2]);
	w_anode876w[] = ( (w_anode876w[2..2] & (! w_data651w[2..2])), (w_anode876w[1..1] & w_data651w[1..1]), (w_anode876w[0..0] & (! w_data651w[0..0])), w_anode846w[2..2]);
	w_anode886w[] = ( (w_anode886w[2..2] & (! w_data651w[2..2])), (w_anode886w[1..1] & w_data651w[1..1]), (w_anode886w[0..0] & w_data651w[0..0]), w_anode846w[2..2]);
	w_anode896w[] = ( (w_anode896w[2..2] & w_data651w[2..2]), (w_anode896w[1..1] & (! w_data651w[1..1])), (w_anode896w[0..0] & (! w_data651w[0..0])), w_anode846w[2..2]);
	w_anode906w[] = ( (w_anode906w[2..2] & w_data651w[2..2]), (w_anode906w[1..1] & (! w_data651w[1..1])), (w_anode906w[0..0] & w_data651w[0..0]), w_anode846w[2..2]);
	w_anode916w[] = ( (w_anode916w[2..2] & w_data651w[2..2]), (w_anode916w[1..1] & w_data651w[1..1]), (w_anode916w[0..0] & (! w_data651w[0..0])), w_anode846w[2..2]);
	w_anode926w[] = ( (w_anode926w[2..2] & w_data651w[2..2]), (w_anode926w[1..1] & w_data651w[1..1]), (w_anode926w[0..0] & w_data651w[0..0]), w_anode846w[2..2]);
	w_anode937w[] = ( (w_anode937w[1..1] & data_wire[4..4]), (w_anode937w[0..0] & data_wire[3..3]), enable_wire);
	w_anode946w[] = ( (w_anode946w[2..2] & (! w_data651w[2..2])), (w_anode946w[1..1] & (! w_data651w[1..1])), (w_anode946w[0..0] & (! w_data651w[0..0])), w_anode937w[2..2]);
	w_anode957w[] = ( (w_anode957w[2..2] & (! w_data651w[2..2])), (w_anode957w[1..1] & (! w_data651w[1..1])), (w_anode957w[0..0] & w_data651w[0..0]), w_anode937w[2..2]);
	w_anode967w[] = ( (w_anode967w[2..2] & (! w_data651w[2..2])), (w_anode967w[1..1] & w_data651w[1..1]), (w_anode967w[0..0] & (! w_data651w[0..0])), w_anode937w[2..2]);
	w_anode977w[] = ( (w_anode977w[2..2] & (! w_data651w[2..2])), (w_anode977w[1..1] & w_data651w[1..1]), (w_anode977w[0..0] & w_data651w[0..0]), w_anode937w[2..2]);
	w_anode987w[] = ( (w_anode987w[2..2] & w_data651w[2..2]), (w_anode987w[1..1] & (! w_data651w[1..1])), (w_anode987w[0..0] & (! w_data651w[0..0])), w_anode937w[2..2]);
	w_anode997w[] = ( (w_anode997w[2..2] & w_data651w[2..2]), (w_anode997w[1..1] & (! w_data651w[1..1])), (w_anode997w[0..0] & w_data651w[0..0]), w_anode937w[2..2]);
	w_data651w[2..0] = data_wire[2..0];
END;
--VALID FILE
