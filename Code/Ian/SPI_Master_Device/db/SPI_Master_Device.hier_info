|stimulus
iCLK_50 => iCLK_50.IN1
iSW[0] => iSW[0].IN1
iSW[1] => iSW[1].IN1
iSW[2] => iSW[2].IN1
iSW[3] => iSW[3].IN1
iSW[4] => ~NO_FANOUT~
iSW[5] => ~NO_FANOUT~
iSW[6] => ~NO_FANOUT~
iSW[7] => ~NO_FANOUT~
iSW[8] => ~NO_FANOUT~
iSW[9] => ~NO_FANOUT~
iSW[10] => ~NO_FANOUT~
iSW[11] => ~NO_FANOUT~
iSW[12] => ~NO_FANOUT~
iSW[13] => ~NO_FANOUT~
iSW[14] => ~NO_FANOUT~
iSW[15] => ~NO_FANOUT~
iSW[16] => ~NO_FANOUT~
iSW[17] => ~NO_FANOUT~
iKEY[0] => ~NO_FANOUT~
iKEY[1] => ~NO_FANOUT~
iKEY[2] => ~NO_FANOUT~
iKEY[3] => ~NO_FANOUT~
oLEDR[0] <= master:SPI_MASTER_INSTANT.DATA
oLEDR[1] <= master:SPI_MASTER_INSTANT.DATA
oLEDR[2] <= master:SPI_MASTER_INSTANT.DATA
oLEDR[3] <= master:SPI_MASTER_INSTANT.DATA
oLEDR[4] <= master:SPI_MASTER_INSTANT.DATA
oLEDR[5] <= master:SPI_MASTER_INSTANT.DATA
oLEDR[6] <= master:SPI_MASTER_INSTANT.DATA
oLEDR[7] <= master:SPI_MASTER_INSTANT.DATA
oLEDR[8] <= master:SPI_MASTER_INSTANT.DATA
oLEDR[9] <= master:SPI_MASTER_INSTANT.DATA
oLEDR[10] <= master:SPI_MASTER_INSTANT.DATA
oLEDR[11] <= master:SPI_MASTER_INSTANT.DATA
oLEDR[12] <= <GND>
oLEDR[13] <= <GND>
oLEDR[14] <= <GND>
oLEDR[15] <= <GND>
oLEDR[16] <= <GND>
oLEDR[17] <= <GND>
oLEDG[0] <= master:SPI_MASTER_INSTANT.DATA
oLEDG[1] <= master:SPI_MASTER_INSTANT.DATA
oLEDG[2] <= master:SPI_MASTER_INSTANT.DATA
oLEDG[3] <= master:SPI_MASTER_INSTANT.DATA
oLEDG[4] <= <GND>
oLEDG[5] <= <GND>
oLEDG[6] <= <GND>
oLEDG[7] <= master:SPI_MASTER_INSTANT.FIN
oLEDG[8] <= master:SPI_MASTER_INSTANT.INVALID
GPIO_0[0] <> master:SPI_MASTER_INSTANT.MOSI
GPIO_0[1] <> master:SPI_MASTER_INSTANT.MISO
GPIO_0[2] <> <UNC>
GPIO_0[3] <> master:SPI_MASTER_INSTANT.CSbar
GPIO_0[4] <> <UNC>
GPIO_0[5] <> master:SPI_MASTER_INSTANT.SCK
GPIO_0[6] <> <UNC>
GPIO_0[7] <> <UNC>
GPIO_0[8] <> <UNC>
GPIO_0[9] <> <UNC>
GPIO_0[10] <> <UNC>
GPIO_0[11] <> <UNC>
GPIO_0[12] <> <UNC>
GPIO_0[13] <> <UNC>
GPIO_0[14] <> <UNC>
GPIO_0[15] <> <UNC>
GPIO_0[16] <> <UNC>
GPIO_0[17] <> <UNC>
GPIO_0[18] <> <UNC>
GPIO_0[19] <> <UNC>
GPIO_0[20] <> <UNC>
GPIO_0[21] <> <UNC>
GPIO_0[22] <> <UNC>
GPIO_0[23] <> <UNC>
GPIO_0[24] <> <UNC>
GPIO_0[25] <> <UNC>
GPIO_0[26] <> <UNC>
GPIO_0[27] <> <UNC>
GPIO_0[28] <> <UNC>
GPIO_0[29] <> <UNC>
GPIO_0[30] <> <UNC>
GPIO_0[31] <> <UNC>


|stimulus|CLK_PLL:CLK_PLL_inst
inclk0 => sub_wire5[0].IN1
c0 <= altpll:altpll_component.clk
c1 <= altpll:altpll_component.clk
c2 <= altpll:altpll_component.clk


|stimulus|CLK_PLL:CLK_PLL_inst|altpll:altpll_component
inclk[0] => pll.CLK
inclk[1] => ~NO_FANOUT~
fbin => ~NO_FANOUT~
pllena => ~NO_FANOUT~
clkswitch => ~NO_FANOUT~
areset => ~NO_FANOUT~
pfdena => ~NO_FANOUT~
clkena[0] => ~NO_FANOUT~
clkena[1] => ~NO_FANOUT~
clkena[2] => ~NO_FANOUT~
clkena[3] => ~NO_FANOUT~
clkena[4] => ~NO_FANOUT~
clkena[5] => ~NO_FANOUT~
extclkena[0] => ~NO_FANOUT~
extclkena[1] => ~NO_FANOUT~
extclkena[2] => ~NO_FANOUT~
extclkena[3] => ~NO_FANOUT~
scanclk => ~NO_FANOUT~
scanclkena => ~NO_FANOUT~
scanaclr => ~NO_FANOUT~
scanread => ~NO_FANOUT~
scanwrite => ~NO_FANOUT~
scandata => ~NO_FANOUT~
phasecounterselect[0] => ~NO_FANOUT~
phasecounterselect[1] => ~NO_FANOUT~
phasecounterselect[2] => ~NO_FANOUT~
phasecounterselect[3] => ~NO_FANOUT~
phaseupdown => ~NO_FANOUT~
phasestep => ~NO_FANOUT~
configupdate => ~NO_FANOUT~
fbmimicbidir <> <GND>
clk[0] <= clk[0].DB_MAX_OUTPUT_PORT_TYPE
clk[1] <= clk[1].DB_MAX_OUTPUT_PORT_TYPE
clk[2] <= clk[2].DB_MAX_OUTPUT_PORT_TYPE
clk[3] <= <GND>
clk[4] <= <GND>
clk[5] <= <GND>
extclk[0] <= <GND>
extclk[1] <= <GND>
extclk[2] <= <GND>
extclk[3] <= <GND>
clkbad[0] <= <GND>
clkbad[1] <= <GND>
enable1 <= <GND>
enable0 <= <GND>
activeclock <= <GND>
clkloss <= <GND>
locked <= <GND>
scandataout <= <GND>
scandone <= <GND>
sclkout0 <= <GND>
sclkout1 <= sclkout1.DB_MAX_OUTPUT_PORT_TYPE
phasedone <= <GND>
vcooverrange <= <GND>
vcounderrange <= <GND>
fbout <= <GND>
fref <= <GND>
icdrclk <= <GND>


|stimulus|master:SPI_MASTER_INSTANT
SPI_CLK => INVALID~reg0.CLK
SPI_CLK => DATA[0]~reg0.CLK
SPI_CLK => DATA[1]~reg0.CLK
SPI_CLK => DATA[2]~reg0.CLK
SPI_CLK => DATA[3]~reg0.CLK
SPI_CLK => DATA[4]~reg0.CLK
SPI_CLK => DATA[5]~reg0.CLK
SPI_CLK => DATA[6]~reg0.CLK
SPI_CLK => DATA[7]~reg0.CLK
SPI_CLK => DATA[8]~reg0.CLK
SPI_CLK => DATA[9]~reg0.CLK
SPI_CLK => DATA[10]~reg0.CLK
SPI_CLK => DATA[11]~reg0.CLK
SPI_CLK => DATA[12]~reg0.CLK
SPI_CLK => DATA[13]~reg0.CLK
SPI_CLK => DATA[14]~reg0.CLK
SPI_CLK => DATA[15]~reg0.CLK
SPI_CLK => FIN~reg0.CLK
SPI_CLK => CSbar~reg0.CLK
SPI_CLK => MOSI~reg0.CLK
SPI_CLK => MOSI~en.CLK
SPI_CLK => data_out[0].CLK
SPI_CLK => data_out[1].CLK
SPI_CLK => data_out[2].CLK
SPI_CLK => data_out[3].CLK
SPI_CLK => data_out[4].CLK
SPI_CLK => data_out[5].CLK
SPI_CLK => data_out[6].CLK
SPI_CLK => data_out[7].CLK
SPI_CLK => data_out[8].CLK
SPI_CLK => data_out[9].CLK
SPI_CLK => data_out[10].CLK
SPI_CLK => data_out[11].CLK
SPI_CLK => data_out[12].CLK
SPI_CLK => data_out[13].CLK
SPI_CLK => data_out[14].CLK
SPI_CLK => data_out[15].CLK
SPI_CLK => ocounter[0].CLK
SPI_CLK => ocounter[1].CLK
SPI_CLK => ocounter[2].CLK
SPI_CLK => ocounter[3].CLK
SPI_CLK => ocounter[4].CLK
SPI_CLK => finished[0].CLK
SPI_CLK => data_in[0].CLK
SPI_CLK => data_in[1].CLK
SPI_CLK => data_in[2].CLK
SPI_CLK => data_in[3].CLK
SPI_CLK => data_in[4].CLK
SPI_CLK => data_in[5].CLK
SPI_CLK => data_in[6].CLK
SPI_CLK => data_in[7].CLK
SPI_CLK => data_in[8].CLK
SPI_CLK => data_in[9].CLK
SPI_CLK => data_in[10].CLK
SPI_CLK => data_in[11].CLK
SPI_CLK => data_in[12].CLK
SPI_CLK => data_in[13].CLK
SPI_CLK => data_in[14].CLK
SPI_CLK => data_in[15].CLK
SPI_CLK => finished[1].CLK
SPI_CLK => icounter[0].CLK
SPI_CLK => icounter[1].CLK
SPI_CLK => icounter[2].CLK
SPI_CLK => icounter[3].CLK
SPI_CLK => icounter[4].CLK
SPI_CLK => first_start[0].CLK
SPI_CLK => first_start[1].CLK
SPI_CLK => first_start[2].CLK
SPI_CLK => SCK.DATAIN
ENA => CSbar~reg0.DATAIN
MUX_ADDR[0] => data_out.DATAB
MUX_ADDR[1] => data_out.DATAB
MUX_ADDR[2] => data_out.DATAB
MUX_ADDR[3] => data_out.DATAB
MISO => data_in.DATAA
MOSI <= MOSI.DB_MAX_OUTPUT_PORT_TYPE
CSbar <= CSbar~reg0.DB_MAX_OUTPUT_PORT_TYPE
SCK <= SPI_CLK.DB_MAX_OUTPUT_PORT_TYPE
FIN <= FIN~reg0.DB_MAX_OUTPUT_PORT_TYPE
DATA[0] <= DATA[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
DATA[1] <= DATA[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
DATA[2] <= DATA[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
DATA[3] <= DATA[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
DATA[4] <= DATA[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
DATA[5] <= DATA[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
DATA[6] <= DATA[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
DATA[7] <= DATA[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
DATA[8] <= DATA[8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
DATA[9] <= DATA[9]~reg0.DB_MAX_OUTPUT_PORT_TYPE
DATA[10] <= DATA[10]~reg0.DB_MAX_OUTPUT_PORT_TYPE
DATA[11] <= DATA[11]~reg0.DB_MAX_OUTPUT_PORT_TYPE
DATA[12] <= DATA[12]~reg0.DB_MAX_OUTPUT_PORT_TYPE
DATA[13] <= DATA[13]~reg0.DB_MAX_OUTPUT_PORT_TYPE
DATA[14] <= DATA[14]~reg0.DB_MAX_OUTPUT_PORT_TYPE
DATA[15] <= DATA[15]~reg0.DB_MAX_OUTPUT_PORT_TYPE
INVALID <= INVALID~reg0.DB_MAX_OUTPUT_PORT_TYPE


