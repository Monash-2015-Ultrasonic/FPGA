--lpm_decode CBX_DECLARE_ALL_CONNECTED_PORTS="OFF" DEVICE_FAMILY="Cyclone II" LPM_DECODES=16 LPM_WIDTH=4 data enable eq
--VERSION_BEGIN 13.0 cbx_cycloneii 2013:06:12:18:03:43:SJ cbx_lpm_add_sub 2013:06:12:18:03:43:SJ cbx_lpm_compare 2013:06:12:18:03:43:SJ cbx_lpm_decode 2013:06:12:18:03:43:SJ cbx_mgl 2013:06:12:18:05:10:SJ cbx_stratix 2013:06:12:18:03:43:SJ cbx_stratixii 2013:06:12:18:03:43:SJ  VERSION_END


-- Copyright (C) 1991-2013 Altera Corporation
--  Your use of Altera Corporation's design tools, logic functions 
--  and other software and tools, and its AMPP partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Altera Program License 
--  Subscription Agreement, Altera MegaCore Function License 
--  Agreement, or other applicable license agreement, including, 
--  without limitation, that your use is for the sole purpose of 
--  programming logic devices manufactured by Altera and sold by 
--  Altera or its authorized distributors.  Please refer to the 
--  applicable agreement for further details.



--synthesis_resources = lut 18 
SUBDESIGN decode_ppa
( 
	data[3..0]	:	input;
	enable	:	input;
	eq[15..0]	:	output;
) 
VARIABLE 
	data_wire[3..0]	: WIRE;
	enable_wire	: WIRE;
	eq_node[15..0]	: WIRE;
	eq_wire[15..0]	: WIRE;
	w_anode3049w[1..0]	: WIRE;
	w_anode3058w[3..0]	: WIRE;
	w_anode3075w[3..0]	: WIRE;
	w_anode3085w[3..0]	: WIRE;
	w_anode3095w[3..0]	: WIRE;
	w_anode3105w[3..0]	: WIRE;
	w_anode3115w[3..0]	: WIRE;
	w_anode3125w[3..0]	: WIRE;
	w_anode3135w[3..0]	: WIRE;
	w_anode3147w[1..0]	: WIRE;
	w_anode3154w[3..0]	: WIRE;
	w_anode3165w[3..0]	: WIRE;
	w_anode3175w[3..0]	: WIRE;
	w_anode3185w[3..0]	: WIRE;
	w_anode3195w[3..0]	: WIRE;
	w_anode3205w[3..0]	: WIRE;
	w_anode3215w[3..0]	: WIRE;
	w_anode3225w[3..0]	: WIRE;
	w_data3047w[2..0]	: WIRE;

BEGIN 
	data_wire[] = data[];
	enable_wire = enable;
	eq[] = eq_node[];
	eq_node[15..0] = eq_wire[15..0];
	eq_wire[] = ( ( w_anode3225w[3..3], w_anode3215w[3..3], w_anode3205w[3..3], w_anode3195w[3..3], w_anode3185w[3..3], w_anode3175w[3..3], w_anode3165w[3..3], w_anode3154w[3..3]), ( w_anode3135w[3..3], w_anode3125w[3..3], w_anode3115w[3..3], w_anode3105w[3..3], w_anode3095w[3..3], w_anode3085w[3..3], w_anode3075w[3..3], w_anode3058w[3..3]));
	w_anode3049w[] = ( (w_anode3049w[0..0] & (! data_wire[3..3])), enable_wire);
	w_anode3058w[] = ( (w_anode3058w[2..2] & (! w_data3047w[2..2])), (w_anode3058w[1..1] & (! w_data3047w[1..1])), (w_anode3058w[0..0] & (! w_data3047w[0..0])), w_anode3049w[1..1]);
	w_anode3075w[] = ( (w_anode3075w[2..2] & (! w_data3047w[2..2])), (w_anode3075w[1..1] & (! w_data3047w[1..1])), (w_anode3075w[0..0] & w_data3047w[0..0]), w_anode3049w[1..1]);
	w_anode3085w[] = ( (w_anode3085w[2..2] & (! w_data3047w[2..2])), (w_anode3085w[1..1] & w_data3047w[1..1]), (w_anode3085w[0..0] & (! w_data3047w[0..0])), w_anode3049w[1..1]);
	w_anode3095w[] = ( (w_anode3095w[2..2] & (! w_data3047w[2..2])), (w_anode3095w[1..1] & w_data3047w[1..1]), (w_anode3095w[0..0] & w_data3047w[0..0]), w_anode3049w[1..1]);
	w_anode3105w[] = ( (w_anode3105w[2..2] & w_data3047w[2..2]), (w_anode3105w[1..1] & (! w_data3047w[1..1])), (w_anode3105w[0..0] & (! w_data3047w[0..0])), w_anode3049w[1..1]);
	w_anode3115w[] = ( (w_anode3115w[2..2] & w_data3047w[2..2]), (w_anode3115w[1..1] & (! w_data3047w[1..1])), (w_anode3115w[0..0] & w_data3047w[0..0]), w_anode3049w[1..1]);
	w_anode3125w[] = ( (w_anode3125w[2..2] & w_data3047w[2..2]), (w_anode3125w[1..1] & w_data3047w[1..1]), (w_anode3125w[0..0] & (! w_data3047w[0..0])), w_anode3049w[1..1]);
	w_anode3135w[] = ( (w_anode3135w[2..2] & w_data3047w[2..2]), (w_anode3135w[1..1] & w_data3047w[1..1]), (w_anode3135w[0..0] & w_data3047w[0..0]), w_anode3049w[1..1]);
	w_anode3147w[] = ( (w_anode3147w[0..0] & data_wire[3..3]), enable_wire);
	w_anode3154w[] = ( (w_anode3154w[2..2] & (! w_data3047w[2..2])), (w_anode3154w[1..1] & (! w_data3047w[1..1])), (w_anode3154w[0..0] & (! w_data3047w[0..0])), w_anode3147w[1..1]);
	w_anode3165w[] = ( (w_anode3165w[2..2] & (! w_data3047w[2..2])), (w_anode3165w[1..1] & (! w_data3047w[1..1])), (w_anode3165w[0..0] & w_data3047w[0..0]), w_anode3147w[1..1]);
	w_anode3175w[] = ( (w_anode3175w[2..2] & (! w_data3047w[2..2])), (w_anode3175w[1..1] & w_data3047w[1..1]), (w_anode3175w[0..0] & (! w_data3047w[0..0])), w_anode3147w[1..1]);
	w_anode3185w[] = ( (w_anode3185w[2..2] & (! w_data3047w[2..2])), (w_anode3185w[1..1] & w_data3047w[1..1]), (w_anode3185w[0..0] & w_data3047w[0..0]), w_anode3147w[1..1]);
	w_anode3195w[] = ( (w_anode3195w[2..2] & w_data3047w[2..2]), (w_anode3195w[1..1] & (! w_data3047w[1..1])), (w_anode3195w[0..0] & (! w_data3047w[0..0])), w_anode3147w[1..1]);
	w_anode3205w[] = ( (w_anode3205w[2..2] & w_data3047w[2..2]), (w_anode3205w[1..1] & (! w_data3047w[1..1])), (w_anode3205w[0..0] & w_data3047w[0..0]), w_anode3147w[1..1]);
	w_anode3215w[] = ( (w_anode3215w[2..2] & w_data3047w[2..2]), (w_anode3215w[1..1] & w_data3047w[1..1]), (w_anode3215w[0..0] & (! w_data3047w[0..0])), w_anode3147w[1..1]);
	w_anode3225w[] = ( (w_anode3225w[2..2] & w_data3047w[2..2]), (w_anode3225w[1..1] & w_data3047w[1..1]), (w_anode3225w[0..0] & w_data3047w[0..0]), w_anode3147w[1..1]);
	w_data3047w[2..0] = data_wire[2..0];
END;
--VALID FILE
